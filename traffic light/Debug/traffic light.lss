
traffic light.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c0  00000000  00000000  00000134  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000c0  00000386  2**0
                  ALLOC
  2 .comment      0000002f  00000000  00000000  000007b5  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000001c  00000000  00000000  000007e4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000204e  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000914  00000000  00000000  0000297e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000953  00000000  00000000  00003292  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000023c  00000000  00000000  00003be8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000027a  00000000  00000000  00003e24  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002df  00000000  00000000  0000409e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  0000437d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000666  00000666  0000079a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004460  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.APP_INIT 0000002a  0000053e  0000053e  00000672  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.Turn_Red_Led_With_Delay 00000022  0000058e  0000058e  000006c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.Turn_Yellow_Led_With_Delay 00000022  000005b0  000005b0  000006e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.Turn_Green_Led_With_Delay 00000026  00000568  00000568  0000069c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .data.green_led 00000001  0080006c  0000067e  000007b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 19 .data.yellow_led 00000001  0080006d  0000067f  000007b3  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 20 .data.red_led 00000001  0080006e  00000680  000007b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data.timer   00000006  00800060  00000678  000007ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 22 .text.main    00000012  00000644  00000644  00000778  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.gpio_pin_direction_intialization 00000192  000000c0  000000c0  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.gpio_pin_write_logic 00000190  00000252  00000252  00000386  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.gpio_pin_intialization 00000020  000005d2  000005d2  00000706  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.gpio_PORT_write_value 00000020  000005f2  000005f2  00000726  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.Timer0_set_mode 0000005a  0000045c  0000045c  00000590  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Timer0_Init 0000007a  000003e2  000003e2  00000516  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.Timer0_Set_compare_value 00000004  0000066a  0000066a  0000079e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.delay_ms 0000001c  00000612  00000612  00000746  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__vector_10 0000004e  000004b6  000004b6  000005ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .bss.TMR0_CompareMatchInterruptHandler 00000002  00800066  00800066  000007b5  2**0
                  ALLOC
 33 .text.delay_Isr 0000003a  00000504  00000504  00000638  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .bss.sw_counter 00000002  00800068  00800068  000007b5  2**0
                  ALLOC
 35 .bss.timer_flag 00000001  0080006f  0080006f  000007b5  2**0
                  ALLOC
 36 .bss.sw_delay 00000002  0080006a  0080006a  000007b5  2**0
                  ALLOC
 37 .text.libgcc  00000010  00000656  00000656  0000078a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.__dummy_fini 00000002  00000672  00000672  000007a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.__dummy_funcs_on_exit 00000002  00000674  00000674  000007a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.__dummy_simulator_exit 00000002  00000676  00000676  000007aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.exit    00000016  0000062e  0000062e  00000762  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text._Exit   00000004  0000066e  0000066e  000007a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__ctors_end>
   4:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
   8:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
   c:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  10:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  14:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  18:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  1c:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  20:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  24:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  28:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__vector_10>
  2c:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  30:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  34:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  38:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  3c:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  40:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  44:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  48:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  4c:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>
  50:	0c 94 33 03 	jmp	0x666	; 0x666 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 66       	ori	r16, 0x60	; 96
  58:	00 06       	cpc	r0, r16
  5a:	78 00       	.word	0x0078	; ????
  5c:	66 00       	.word	0x0066	; ????
  5e:	6c 80       	ldd	r6, Y+4	; 0x04
  60:	00 6c       	ori	r16, 0xC0	; 192
  62:	00 6f       	ori	r16, 0xF0	; 240
  64:	00 06       	cpc	r0, r16
  66:	7e 00       	.word	0x007e	; ????
  68:	6f 00       	.word	0x006f	; ????
  6a:	70 80       	ld	r7, Z

0000006c <__ctors_end>:
  6c:	11 24       	eor	r1, r1
  6e:	1f be       	out	0x3f, r1	; 63
  70:	cf e5       	ldi	r28, 0x5F	; 95
  72:	d8 e0       	ldi	r29, 0x08	; 8
  74:	de bf       	out	0x3e, r29	; 62
  76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
  78:	e4 e5       	ldi	r30, 0x54	; 84
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	40 e0       	ldi	r20, 0x00	; 0
  7e:	17 c0       	rjmp	.+46     	; 0xae <__do_clear_bss+0x8>
  80:	b5 91       	lpm	r27, Z+
  82:	a5 91       	lpm	r26, Z+
  84:	35 91       	lpm	r19, Z+
  86:	25 91       	lpm	r18, Z+
  88:	05 91       	lpm	r16, Z+
  8a:	07 fd       	sbrc	r16, 7
  8c:	0c c0       	rjmp	.+24     	; 0xa6 <__do_clear_bss>
  8e:	95 91       	lpm	r25, Z+
  90:	85 91       	lpm	r24, Z+
  92:	ef 01       	movw	r28, r30
  94:	f9 2f       	mov	r31, r25
  96:	e8 2f       	mov	r30, r24
  98:	05 90       	lpm	r0, Z+
  9a:	0d 92       	st	X+, r0
  9c:	a2 17       	cp	r26, r18
  9e:	b3 07       	cpc	r27, r19
  a0:	d9 f7       	brne	.-10     	; 0x98 <__do_copy_data+0x20>
  a2:	fe 01       	movw	r30, r28
  a4:	04 c0       	rjmp	.+8      	; 0xae <__do_clear_bss+0x8>

000000a6 <__do_clear_bss>:
  a6:	1d 92       	st	X+, r1
  a8:	a2 17       	cp	r26, r18
  aa:	b3 07       	cpc	r27, r19
  ac:	e1 f7       	brne	.-8      	; 0xa6 <__do_clear_bss>
  ae:	ec 36       	cpi	r30, 0x6C	; 108
  b0:	f4 07       	cpc	r31, r20
  b2:	31 f7       	brne	.-52     	; 0x80 <__do_copy_data+0x8>
  b4:	0e 94 22 03 	call	0x644	; 0x644 <main>
  b8:	0c 94 17 03 	jmp	0x62e	; 0x62e <exit>

000000bc <_exit>:
  bc:	f8 94       	cli

000000be <__stop_program>:
  be:	ff cf       	rjmp	.-2      	; 0xbe <__stop_program>

Disassembly of section .text:

00000666 <__bad_interrupt>:
 666:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.APP_INIT:

0000053e <APP_INIT>:
	.direction = GPIO_OUTPUT_DIRECTION ,
	.logic = GPIO_LOW
	
};
void APP_INIT(void){
	Timer0_Init(&timer);
 53e:	60 e6       	ldi	r22, 0x60	; 96
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	80 e8       	ldi	r24, 0x80	; 128
 544:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <Timer0_Init>
	gpio_pin_intialization(&red_led);
 548:	6e e6       	ldi	r22, 0x6E	; 110
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	80 e8       	ldi	r24, 0x80	; 128
 54e:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <gpio_pin_intialization>
	gpio_pin_intialization(&yellow_led);
 552:	6d e6       	ldi	r22, 0x6D	; 109
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	80 e8       	ldi	r24, 0x80	; 128
 558:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <gpio_pin_intialization>
	gpio_pin_intialization(&green_led);
 55c:	6c e6       	ldi	r22, 0x6C	; 108
 55e:	70 e0       	ldi	r23, 0x00	; 0
 560:	80 e8       	ldi	r24, 0x80	; 128
 562:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <gpio_pin_intialization>
 566:	08 95       	ret

Disassembly of section .text.Turn_Red_Led_With_Delay:

0000058e <Turn_Red_Led_With_Delay>:
}
void Turn_Red_Led_With_Delay(void){
	gpio_PORT_write_value(GPIO_PORTAID,0);
 58e:	60 e0       	ldi	r22, 0x00	; 0
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <gpio_PORT_write_value>
	while(timer_flag == 0){
 596:	07 c0       	rjmp	.+14     	; 0x5a6 <Turn_Red_Led_With_Delay+0x18>
		SET_BIT(PORTA,0);
 598:	8b b3       	in	r24, 0x1b	; 27
 59a:	81 60       	ori	r24, 0x01	; 1
 59c:	8b bb       	out	0x1b, r24	; 27
		delay_ms(2000);
 59e:	80 ed       	ldi	r24, 0xD0	; 208
 5a0:	97 e0       	ldi	r25, 0x07	; 7
 5a2:	0e 94 09 03 	call	0x612	; 0x612 <delay_ms>
	gpio_pin_intialization(&yellow_led);
	gpio_pin_intialization(&green_led);
}
void Turn_Red_Led_With_Delay(void){
	gpio_PORT_write_value(GPIO_PORTAID,0);
	while(timer_flag == 0){
 5a6:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <timer_flag>
 5aa:	88 23       	and	r24, r24
 5ac:	a9 f3       	breq	.-22     	; 0x598 <Turn_Red_Led_With_Delay+0xa>
		SET_BIT(PORTA,0);
		delay_ms(2000);
	}
}
 5ae:	08 95       	ret

Disassembly of section .text.Turn_Yellow_Led_With_Delay:

000005b0 <Turn_Yellow_Led_With_Delay>:
void Turn_Yellow_Led_With_Delay(void){
	gpio_PORT_write_value(GPIO_PORTAID,0);
 5b0:	60 e0       	ldi	r22, 0x00	; 0
 5b2:	80 e0       	ldi	r24, 0x00	; 0
 5b4:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <gpio_PORT_write_value>
	while(timer_flag == 1){
 5b8:	07 c0       	rjmp	.+14     	; 0x5c8 <Turn_Yellow_Led_With_Delay+0x18>
		SET_BIT(PORTA,3);
 5ba:	8b b3       	in	r24, 0x1b	; 27
 5bc:	88 60       	ori	r24, 0x08	; 8
 5be:	8b bb       	out	0x1b, r24	; 27
		delay_ms(2000);
 5c0:	80 ed       	ldi	r24, 0xD0	; 208
 5c2:	97 e0       	ldi	r25, 0x07	; 7
 5c4:	0e 94 09 03 	call	0x612	; 0x612 <delay_ms>
		delay_ms(2000);
	}
}
void Turn_Yellow_Led_With_Delay(void){
	gpio_PORT_write_value(GPIO_PORTAID,0);
	while(timer_flag == 1){
 5c8:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <timer_flag>
 5cc:	81 30       	cpi	r24, 0x01	; 1
 5ce:	a9 f3       	breq	.-22     	; 0x5ba <Turn_Yellow_Led_With_Delay+0xa>
		SET_BIT(PORTA,3);
		delay_ms(2000);
	}
}
 5d0:	08 95       	ret

Disassembly of section .text.Turn_Green_Led_With_Delay:

00000568 <Turn_Green_Led_With_Delay>:
void Turn_Green_Led_With_Delay(void){
	gpio_PORT_write_value(GPIO_PORTAID,0);
 568:	60 e0       	ldi	r22, 0x00	; 0
 56a:	80 e0       	ldi	r24, 0x00	; 0
 56c:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <gpio_PORT_write_value>
	while(timer_flag == 2){
 570:	07 c0       	rjmp	.+14     	; 0x580 <Turn_Green_Led_With_Delay+0x18>
		SET_BIT(PORTA,6);
 572:	8b b3       	in	r24, 0x1b	; 27
 574:	80 64       	ori	r24, 0x40	; 64
 576:	8b bb       	out	0x1b, r24	; 27
		delay_ms(2000);
 578:	80 ed       	ldi	r24, 0xD0	; 208
 57a:	97 e0       	ldi	r25, 0x07	; 7
 57c:	0e 94 09 03 	call	0x612	; 0x612 <delay_ms>
		delay_ms(2000);
	}
}
void Turn_Green_Led_With_Delay(void){
	gpio_PORT_write_value(GPIO_PORTAID,0);
	while(timer_flag == 2){
 580:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <timer_flag>
 584:	82 30       	cpi	r24, 0x02	; 2
 586:	a9 f3       	breq	.-22     	; 0x572 <Turn_Green_Led_With_Delay+0xa>
		SET_BIT(PORTA,6);
		delay_ms(2000);
	}
	timer_flag=0;
 588:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <timer_flag>
 58c:	08 95       	ret

Disassembly of section .text.main:

00000644 <main>:
 */ 
#include "APP.h"
extern u16 sw_counter ;
int main(void)
{
	APP_INIT();
 644:	0e 94 9f 02 	call	0x53e	; 0x53e <APP_INIT>
    while(1)
    {
			Turn_Red_Led_With_Delay();
 648:	0e 94 c7 02 	call	0x58e	; 0x58e <Turn_Red_Led_With_Delay>
			Turn_Yellow_Led_With_Delay();
 64c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <Turn_Yellow_Led_With_Delay>
			Turn_Green_Led_With_Delay();
 650:	0e 94 b4 02 	call	0x568	; 0x568 <Turn_Green_Led_With_Delay>
 654:	f9 cf       	rjmp	.-14     	; 0x648 <main+0x4>

Disassembly of section .text.gpio_pin_direction_intialization:

000000c0 <gpio_pin_direction_intialization>:
			break;
			case GPIO_PORTBID:_PTRDDRB =copy_direction ;
			break;
			case GPIO_PORTCID:_PTRDDRC =copy_direction ;
			break;
			case GPIO_PORTDID:_PTRDDRD =copy_direction ;
  c0:	e6 2f       	mov	r30, r22
  c2:	f7 2f       	mov	r31, r23
  c4:	94 91       	lpm	r25, Z
  c6:	87 fd       	sbrc	r24, 7
  c8:	90 81       	ld	r25, Z
  ca:	96 ff       	sbrs	r25, 6
  cc:	5f c0       	rjmp	.+190    	; 0x18c <gpio_pin_direction_intialization+0xcc>
  ce:	e6 2f       	mov	r30, r22
  d0:	f7 2f       	mov	r31, r23
  d2:	94 91       	lpm	r25, Z
  d4:	87 fd       	sbrc	r24, 7
  d6:	90 81       	ld	r25, Z
  d8:	97 70       	andi	r25, 0x07	; 7
  da:	91 30       	cpi	r25, 0x01	; 1
  dc:	d9 f0       	breq	.+54     	; 0x114 <gpio_pin_direction_intialization+0x54>
  de:	30 f0       	brcs	.+12     	; 0xec <gpio_pin_direction_intialization+0x2c>
  e0:	92 30       	cpi	r25, 0x02	; 2
  e2:	61 f1       	breq	.+88     	; 0x13c <gpio_pin_direction_intialization+0x7c>
  e4:	93 30       	cpi	r25, 0x03	; 3
  e6:	09 f4       	brne	.+2      	; 0xea <gpio_pin_direction_intialization+0x2a>
  e8:	3d c0       	rjmp	.+122    	; 0x164 <gpio_pin_direction_intialization+0xa4>
  ea:	08 95       	ret
  ec:	3a b3       	in	r19, 0x1a	; 26
  ee:	e6 2f       	mov	r30, r22
  f0:	f7 2f       	mov	r31, r23
  f2:	24 91       	lpm	r18, Z
  f4:	87 fd       	sbrc	r24, 7
  f6:	20 81       	ld	r18, Z
  f8:	26 95       	lsr	r18
  fa:	26 95       	lsr	r18
  fc:	26 95       	lsr	r18
  fe:	27 70       	andi	r18, 0x07	; 7
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <gpio_pin_direction_intialization+0x4a>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	2a 95       	dec	r18
 10c:	e2 f7       	brpl	.-8      	; 0x106 <gpio_pin_direction_intialization+0x46>
 10e:	83 2b       	or	r24, r19
 110:	8a bb       	out	0x1a, r24	; 26
 112:	08 95       	ret
 114:	37 b3       	in	r19, 0x17	; 23
 116:	e6 2f       	mov	r30, r22
 118:	f7 2f       	mov	r31, r23
 11a:	24 91       	lpm	r18, Z
 11c:	87 fd       	sbrc	r24, 7
 11e:	20 81       	ld	r18, Z
 120:	26 95       	lsr	r18
 122:	26 95       	lsr	r18
 124:	26 95       	lsr	r18
 126:	27 70       	andi	r18, 0x07	; 7
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	02 c0       	rjmp	.+4      	; 0x132 <gpio_pin_direction_intialization+0x72>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	2a 95       	dec	r18
 134:	e2 f7       	brpl	.-8      	; 0x12e <gpio_pin_direction_intialization+0x6e>
 136:	83 2b       	or	r24, r19
 138:	87 bb       	out	0x17, r24	; 23
 13a:	08 95       	ret
 13c:	34 b3       	in	r19, 0x14	; 20
 13e:	e6 2f       	mov	r30, r22
 140:	f7 2f       	mov	r31, r23
 142:	24 91       	lpm	r18, Z
 144:	87 fd       	sbrc	r24, 7
 146:	20 81       	ld	r18, Z
 148:	26 95       	lsr	r18
 14a:	26 95       	lsr	r18
 14c:	26 95       	lsr	r18
 14e:	27 70       	andi	r18, 0x07	; 7
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <gpio_pin_direction_intialization+0x9a>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	2a 95       	dec	r18
 15c:	e2 f7       	brpl	.-8      	; 0x156 <gpio_pin_direction_intialization+0x96>
 15e:	83 2b       	or	r24, r19
 160:	84 bb       	out	0x14, r24	; 20
 162:	08 95       	ret
 164:	31 b3       	in	r19, 0x11	; 17
 166:	e6 2f       	mov	r30, r22
 168:	f7 2f       	mov	r31, r23
 16a:	24 91       	lpm	r18, Z
 16c:	87 fd       	sbrc	r24, 7
 16e:	20 81       	ld	r18, Z
 170:	26 95       	lsr	r18
 172:	26 95       	lsr	r18
 174:	26 95       	lsr	r18
 176:	27 70       	andi	r18, 0x07	; 7
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <gpio_pin_direction_intialization+0xc2>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	2a 95       	dec	r18
 184:	e2 f7       	brpl	.-8      	; 0x17e <gpio_pin_direction_intialization+0xbe>
 186:	83 2b       	or	r24, r19
 188:	81 bb       	out	0x11, r24	; 17
 18a:	08 95       	ret
 18c:	e6 2f       	mov	r30, r22
 18e:	f7 2f       	mov	r31, r23
 190:	94 91       	lpm	r25, Z
 192:	87 fd       	sbrc	r24, 7
 194:	90 81       	ld	r25, Z
 196:	97 70       	andi	r25, 0x07	; 7
 198:	91 30       	cpi	r25, 0x01	; 1
 19a:	e1 f0       	breq	.+56     	; 0x1d4 <gpio_pin_direction_intialization+0x114>
 19c:	30 f0       	brcs	.+12     	; 0x1aa <gpio_pin_direction_intialization+0xea>
 19e:	92 30       	cpi	r25, 0x02	; 2
 1a0:	71 f1       	breq	.+92     	; 0x1fe <gpio_pin_direction_intialization+0x13e>
 1a2:	93 30       	cpi	r25, 0x03	; 3
 1a4:	09 f4       	brne	.+2      	; 0x1a8 <gpio_pin_direction_intialization+0xe8>
 1a6:	40 c0       	rjmp	.+128    	; 0x228 <gpio_pin_direction_intialization+0x168>
 1a8:	08 95       	ret
 1aa:	3a b3       	in	r19, 0x1a	; 26
 1ac:	e6 2f       	mov	r30, r22
 1ae:	f7 2f       	mov	r31, r23
 1b0:	24 91       	lpm	r18, Z
 1b2:	87 fd       	sbrc	r24, 7
 1b4:	20 81       	ld	r18, Z
 1b6:	26 95       	lsr	r18
 1b8:	26 95       	lsr	r18
 1ba:	26 95       	lsr	r18
 1bc:	27 70       	andi	r18, 0x07	; 7
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <gpio_pin_direction_intialization+0x108>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	2a 95       	dec	r18
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <gpio_pin_direction_intialization+0x104>
 1cc:	80 95       	com	r24
 1ce:	83 23       	and	r24, r19
 1d0:	8a bb       	out	0x1a, r24	; 26
 1d2:	08 95       	ret
 1d4:	37 b3       	in	r19, 0x17	; 23
 1d6:	e6 2f       	mov	r30, r22
 1d8:	f7 2f       	mov	r31, r23
 1da:	24 91       	lpm	r18, Z
 1dc:	87 fd       	sbrc	r24, 7
 1de:	20 81       	ld	r18, Z
 1e0:	26 95       	lsr	r18
 1e2:	26 95       	lsr	r18
 1e4:	26 95       	lsr	r18
 1e6:	27 70       	andi	r18, 0x07	; 7
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <gpio_pin_direction_intialization+0x132>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	2a 95       	dec	r18
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <gpio_pin_direction_intialization+0x12e>
 1f6:	80 95       	com	r24
 1f8:	83 23       	and	r24, r19
 1fa:	87 bb       	out	0x17, r24	; 23
 1fc:	08 95       	ret
 1fe:	34 b3       	in	r19, 0x14	; 20
 200:	e6 2f       	mov	r30, r22
 202:	f7 2f       	mov	r31, r23
 204:	24 91       	lpm	r18, Z
 206:	87 fd       	sbrc	r24, 7
 208:	20 81       	ld	r18, Z
 20a:	26 95       	lsr	r18
 20c:	26 95       	lsr	r18
 20e:	26 95       	lsr	r18
 210:	27 70       	andi	r18, 0x07	; 7
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <gpio_pin_direction_intialization+0x15c>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	2a 95       	dec	r18
 21e:	e2 f7       	brpl	.-8      	; 0x218 <gpio_pin_direction_intialization+0x158>
 220:	80 95       	com	r24
 222:	83 23       	and	r24, r19
 224:	84 bb       	out	0x14, r24	; 20
 226:	08 95       	ret
 228:	31 b3       	in	r19, 0x11	; 17
 22a:	e6 2f       	mov	r30, r22
 22c:	f7 2f       	mov	r31, r23
 22e:	24 91       	lpm	r18, Z
 230:	87 fd       	sbrc	r24, 7
 232:	20 81       	ld	r18, Z
 234:	26 95       	lsr	r18
 236:	26 95       	lsr	r18
 238:	26 95       	lsr	r18
 23a:	27 70       	andi	r18, 0x07	; 7
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 c0       	rjmp	.+4      	; 0x246 <gpio_pin_direction_intialization+0x186>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	2a 95       	dec	r18
 248:	e2 f7       	brpl	.-8      	; 0x242 <gpio_pin_direction_intialization+0x182>
 24a:	80 95       	com	r24
 24c:	83 23       	and	r24, r19
 24e:	81 bb       	out	0x11, r24	; 17
 250:	08 95       	ret

Disassembly of section .text.gpio_pin_write_logic:

00000252 <gpio_pin_write_logic>:
 252:	44 23       	and	r20, r20
 254:	09 f4       	brne	.+2      	; 0x258 <gpio_pin_write_logic+0x6>
 256:	62 c0       	rjmp	.+196    	; 0x31c <gpio_pin_write_logic+0xca>
 258:	41 30       	cpi	r20, 0x01	; 1
 25a:	09 f0       	breq	.+2      	; 0x25e <gpio_pin_write_logic+0xc>
 25c:	c1 c0       	rjmp	.+386    	; 0x3e0 <gpio_pin_write_logic+0x18e>
 25e:	e6 2f       	mov	r30, r22
 260:	f7 2f       	mov	r31, r23
 262:	94 91       	lpm	r25, Z
 264:	87 fd       	sbrc	r24, 7
 266:	90 81       	ld	r25, Z
 268:	97 70       	andi	r25, 0x07	; 7
 26a:	91 30       	cpi	r25, 0x01	; 1
 26c:	d9 f0       	breq	.+54     	; 0x2a4 <gpio_pin_write_logic+0x52>
 26e:	30 f0       	brcs	.+12     	; 0x27c <gpio_pin_write_logic+0x2a>
 270:	92 30       	cpi	r25, 0x02	; 2
 272:	61 f1       	breq	.+88     	; 0x2cc <gpio_pin_write_logic+0x7a>
 274:	93 30       	cpi	r25, 0x03	; 3
 276:	09 f4       	brne	.+2      	; 0x27a <gpio_pin_write_logic+0x28>
 278:	3d c0       	rjmp	.+122    	; 0x2f4 <gpio_pin_write_logic+0xa2>
 27a:	08 95       	ret
 27c:	3b b3       	in	r19, 0x1b	; 27
 27e:	e6 2f       	mov	r30, r22
 280:	f7 2f       	mov	r31, r23
 282:	24 91       	lpm	r18, Z
 284:	87 fd       	sbrc	r24, 7
 286:	20 81       	ld	r18, Z
 288:	26 95       	lsr	r18
 28a:	26 95       	lsr	r18
 28c:	26 95       	lsr	r18
 28e:	27 70       	andi	r18, 0x07	; 7
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	02 c0       	rjmp	.+4      	; 0x29a <gpio_pin_write_logic+0x48>
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	2a 95       	dec	r18
 29c:	e2 f7       	brpl	.-8      	; 0x296 <gpio_pin_write_logic+0x44>
 29e:	83 2b       	or	r24, r19
 2a0:	8b bb       	out	0x1b, r24	; 27
 2a2:	08 95       	ret
 2a4:	38 b3       	in	r19, 0x18	; 24
 2a6:	e6 2f       	mov	r30, r22
 2a8:	f7 2f       	mov	r31, r23
 2aa:	24 91       	lpm	r18, Z
 2ac:	87 fd       	sbrc	r24, 7
 2ae:	20 81       	ld	r18, Z
 2b0:	26 95       	lsr	r18
 2b2:	26 95       	lsr	r18
 2b4:	26 95       	lsr	r18
 2b6:	27 70       	andi	r18, 0x07	; 7
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <gpio_pin_write_logic+0x70>
 2be:	88 0f       	add	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	2a 95       	dec	r18
 2c4:	e2 f7       	brpl	.-8      	; 0x2be <gpio_pin_write_logic+0x6c>
 2c6:	83 2b       	or	r24, r19
 2c8:	88 bb       	out	0x18, r24	; 24
 2ca:	08 95       	ret
 2cc:	35 b3       	in	r19, 0x15	; 21
 2ce:	e6 2f       	mov	r30, r22
 2d0:	f7 2f       	mov	r31, r23
 2d2:	24 91       	lpm	r18, Z
 2d4:	87 fd       	sbrc	r24, 7
 2d6:	20 81       	ld	r18, Z
 2d8:	26 95       	lsr	r18
 2da:	26 95       	lsr	r18
 2dc:	26 95       	lsr	r18
 2de:	27 70       	andi	r18, 0x07	; 7
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <gpio_pin_write_logic+0x98>
 2e6:	88 0f       	add	r24, r24
 2e8:	99 1f       	adc	r25, r25
 2ea:	2a 95       	dec	r18
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <gpio_pin_write_logic+0x94>
 2ee:	83 2b       	or	r24, r19
 2f0:	85 bb       	out	0x15, r24	; 21
 2f2:	08 95       	ret
 2f4:	32 b3       	in	r19, 0x12	; 18
 2f6:	e6 2f       	mov	r30, r22
 2f8:	f7 2f       	mov	r31, r23
 2fa:	24 91       	lpm	r18, Z
 2fc:	87 fd       	sbrc	r24, 7
 2fe:	20 81       	ld	r18, Z
 300:	26 95       	lsr	r18
 302:	26 95       	lsr	r18
 304:	26 95       	lsr	r18
 306:	27 70       	andi	r18, 0x07	; 7
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	02 c0       	rjmp	.+4      	; 0x312 <gpio_pin_write_logic+0xc0>
 30e:	88 0f       	add	r24, r24
 310:	99 1f       	adc	r25, r25
 312:	2a 95       	dec	r18
 314:	e2 f7       	brpl	.-8      	; 0x30e <gpio_pin_write_logic+0xbc>
 316:	83 2b       	or	r24, r19
 318:	82 bb       	out	0x12, r24	; 18
 31a:	08 95       	ret
 31c:	e6 2f       	mov	r30, r22
 31e:	f7 2f       	mov	r31, r23
 320:	94 91       	lpm	r25, Z
 322:	87 fd       	sbrc	r24, 7
 324:	90 81       	ld	r25, Z
 326:	97 70       	andi	r25, 0x07	; 7
 328:	91 30       	cpi	r25, 0x01	; 1
 32a:	e1 f0       	breq	.+56     	; 0x364 <gpio_pin_write_logic+0x112>
 32c:	30 f0       	brcs	.+12     	; 0x33a <gpio_pin_write_logic+0xe8>
 32e:	92 30       	cpi	r25, 0x02	; 2
 330:	71 f1       	breq	.+92     	; 0x38e <gpio_pin_write_logic+0x13c>
 332:	93 30       	cpi	r25, 0x03	; 3
 334:	09 f4       	brne	.+2      	; 0x338 <gpio_pin_write_logic+0xe6>
 336:	40 c0       	rjmp	.+128    	; 0x3b8 <gpio_pin_write_logic+0x166>
 338:	08 95       	ret
 33a:	3b b3       	in	r19, 0x1b	; 27
 33c:	e6 2f       	mov	r30, r22
 33e:	f7 2f       	mov	r31, r23
 340:	24 91       	lpm	r18, Z
 342:	87 fd       	sbrc	r24, 7
 344:	20 81       	ld	r18, Z
 346:	26 95       	lsr	r18
 348:	26 95       	lsr	r18
 34a:	26 95       	lsr	r18
 34c:	27 70       	andi	r18, 0x07	; 7
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	02 c0       	rjmp	.+4      	; 0x358 <gpio_pin_write_logic+0x106>
 354:	88 0f       	add	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	2a 95       	dec	r18
 35a:	e2 f7       	brpl	.-8      	; 0x354 <gpio_pin_write_logic+0x102>
 35c:	80 95       	com	r24
 35e:	83 23       	and	r24, r19
 360:	8b bb       	out	0x1b, r24	; 27
 362:	08 95       	ret
 364:	38 b3       	in	r19, 0x18	; 24
 366:	e6 2f       	mov	r30, r22
 368:	f7 2f       	mov	r31, r23
 36a:	24 91       	lpm	r18, Z
 36c:	87 fd       	sbrc	r24, 7
 36e:	20 81       	ld	r18, Z
 370:	26 95       	lsr	r18
 372:	26 95       	lsr	r18
 374:	26 95       	lsr	r18
 376:	27 70       	andi	r18, 0x07	; 7
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	02 c0       	rjmp	.+4      	; 0x382 <gpio_pin_write_logic+0x130>
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	2a 95       	dec	r18
 384:	e2 f7       	brpl	.-8      	; 0x37e <gpio_pin_write_logic+0x12c>
 386:	80 95       	com	r24
 388:	83 23       	and	r24, r19
 38a:	88 bb       	out	0x18, r24	; 24
 38c:	08 95       	ret
 38e:	35 b3       	in	r19, 0x15	; 21
 390:	e6 2f       	mov	r30, r22
 392:	f7 2f       	mov	r31, r23
 394:	24 91       	lpm	r18, Z
 396:	87 fd       	sbrc	r24, 7
 398:	20 81       	ld	r18, Z
 39a:	26 95       	lsr	r18
 39c:	26 95       	lsr	r18
 39e:	26 95       	lsr	r18
 3a0:	27 70       	andi	r18, 0x07	; 7
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <gpio_pin_write_logic+0x15a>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	2a 95       	dec	r18
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <gpio_pin_write_logic+0x156>
 3b0:	80 95       	com	r24
 3b2:	83 23       	and	r24, r19
 3b4:	85 bb       	out	0x15, r24	; 21
 3b6:	08 95       	ret
 3b8:	32 b3       	in	r19, 0x12	; 18
 3ba:	e6 2f       	mov	r30, r22
 3bc:	f7 2f       	mov	r31, r23
 3be:	24 91       	lpm	r18, Z
 3c0:	87 fd       	sbrc	r24, 7
 3c2:	20 81       	ld	r18, Z
 3c4:	26 95       	lsr	r18
 3c6:	26 95       	lsr	r18
 3c8:	26 95       	lsr	r18
 3ca:	27 70       	andi	r18, 0x07	; 7
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <gpio_pin_write_logic+0x184>
 3d2:	88 0f       	add	r24, r24
 3d4:	99 1f       	adc	r25, r25
 3d6:	2a 95       	dec	r18
 3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <gpio_pin_write_logic+0x180>
 3da:	80 95       	com	r24
 3dc:	83 23       	and	r24, r19
 3de:	82 bb       	out	0x12, r24	; 18
 3e0:	08 95       	ret

Disassembly of section .text.gpio_pin_intialization:

000005d2 <gpio_pin_intialization>:
 5d2:	cf 92       	push	r12
 5d4:	df 92       	push	r13
 5d6:	ef 92       	push	r14
 5d8:	6b 01       	movw	r12, r22
 5da:	e8 2e       	mov	r14, r24
 5dc:	0e 94 60 00 	call	0xc0	; 0xc0 <__data_load_end>
 5e0:	40 e0       	ldi	r20, 0x00	; 0
 5e2:	8e 2d       	mov	r24, r14
 5e4:	b6 01       	movw	r22, r12
 5e6:	0e 94 29 01 	call	0x252	; 0x252 <gpio_pin_write_logic>
 5ea:	ef 90       	pop	r14
 5ec:	df 90       	pop	r13
 5ee:	cf 90       	pop	r12
 5f0:	08 95       	ret

Disassembly of section .text.gpio_PORT_write_value:

000005f2 <gpio_PORT_write_value>:

		}
	}

	void gpio_PORT_write_value(port_index_t copy_portin ,u8 copy_logic ){
		switch(copy_portin){
 5f2:	81 30       	cpi	r24, 0x01	; 1
 5f4:	41 f0       	breq	.+16     	; 0x606 <gpio_PORT_write_value+0x14>
 5f6:	28 f0       	brcs	.+10     	; 0x602 <gpio_PORT_write_value+0x10>
 5f8:	82 30       	cpi	r24, 0x02	; 2
 5fa:	39 f0       	breq	.+14     	; 0x60a <gpio_PORT_write_value+0x18>
 5fc:	83 30       	cpi	r24, 0x03	; 3
 5fe:	39 f0       	breq	.+14     	; 0x60e <gpio_PORT_write_value+0x1c>
 600:	08 95       	ret
			case GPIO_PORTAID:ptr_PORTA=copy_logic;
 602:	6b bb       	out	0x1b, r22	; 27
			break;
 604:	08 95       	ret
			case GPIO_PORTBID:PORTB_Ptr=copy_logic;
 606:	68 bb       	out	0x18, r22	; 24
			break;
 608:	08 95       	ret
			case GPIO_PORTCID:PORTC_Ptr = copy_logic;
 60a:	65 bb       	out	0x15, r22	; 21
			break;
 60c:	08 95       	ret
			case GPIO_PORTDID:PORTD_Ptr=copy_logic ;
 60e:	62 bb       	out	0x12, r22	; 18
 610:	08 95       	ret

Disassembly of section .text.Timer0_set_mode:

0000045c <Timer0_set_mode>:
	 _timer->TMR0_CompareMatchInterruptHandler;
}
void Timer0_DeInit(const timer0_config_t *_timer){
	TMR0_STOP_TIMER();
	TIMER0_CompareMatchInterruptDisable();
	TIMER0_OverflowInterruptDisable();
 45c:	a8 2f       	mov	r26, r24
 45e:	cb 01       	movw	r24, r22
 460:	02 96       	adiw	r24, 0x02	; 2
 462:	a1 1d       	adc	r26, r1
 464:	fc 01       	movw	r30, r24
 466:	84 91       	lpm	r24, Z
 468:	a7 fd       	sbrc	r26, 7
 46a:	80 81       	ld	r24, Z
 46c:	83 70       	andi	r24, 0x03	; 3
 46e:	81 30       	cpi	r24, 0x01	; 1
 470:	69 f0       	breq	.+26     	; 0x48c <Timer0_set_mode+0x30>
 472:	28 f0       	brcs	.+10     	; 0x47e <Timer0_set_mode+0x22>
 474:	82 30       	cpi	r24, 0x02	; 2
 476:	89 f0       	breq	.+34     	; 0x49a <Timer0_set_mode+0x3e>
 478:	83 30       	cpi	r24, 0x03	; 3
 47a:	b1 f0       	breq	.+44     	; 0x4a8 <Timer0_set_mode+0x4c>
 47c:	08 95       	ret
 47e:	83 b7       	in	r24, 0x33	; 51
 480:	8f 7b       	andi	r24, 0xBF	; 191
 482:	83 bf       	out	0x33, r24	; 51
 484:	83 b7       	in	r24, 0x33	; 51
 486:	87 7f       	andi	r24, 0xF7	; 247
 488:	83 bf       	out	0x33, r24	; 51
 48a:	08 95       	ret
 48c:	83 b7       	in	r24, 0x33	; 51
 48e:	80 64       	ori	r24, 0x40	; 64
 490:	83 bf       	out	0x33, r24	; 51
 492:	83 b7       	in	r24, 0x33	; 51
 494:	87 7f       	andi	r24, 0xF7	; 247
 496:	83 bf       	out	0x33, r24	; 51
 498:	08 95       	ret
 49a:	83 b7       	in	r24, 0x33	; 51
 49c:	8f 7b       	andi	r24, 0xBF	; 191
 49e:	83 bf       	out	0x33, r24	; 51
 4a0:	83 b7       	in	r24, 0x33	; 51
 4a2:	88 60       	ori	r24, 0x08	; 8
 4a4:	83 bf       	out	0x33, r24	; 51
 4a6:	08 95       	ret
 4a8:	83 b7       	in	r24, 0x33	; 51
 4aa:	80 64       	ori	r24, 0x40	; 64
 4ac:	83 bf       	out	0x33, r24	; 51
 4ae:	83 b7       	in	r24, 0x33	; 51
 4b0:	88 60       	ori	r24, 0x08	; 8
 4b2:	83 bf       	out	0x33, r24	; 51
 4b4:	08 95       	ret

Disassembly of section .text.Timer0_Init:

000003e2 <Timer0_Init>:
 3e2:	cf 92       	push	r12
 3e4:	df 92       	push	r13
 3e6:	ef 92       	push	r14
 3e8:	6b 01       	movw	r12, r22
 3ea:	e8 2e       	mov	r14, r24
 3ec:	0e 94 2e 02 	call	0x45c	; 0x45c <Timer0_set_mode>
 3f0:	93 b7       	in	r25, 0x33	; 51
 3f2:	4e 2d       	mov	r20, r14
 3f4:	96 01       	movw	r18, r12
 3f6:	2d 5f       	subi	r18, 0xFD	; 253
 3f8:	3f 4f       	sbci	r19, 0xFF	; 255
 3fa:	4f 4f       	sbci	r20, 0xFF	; 255
 3fc:	f9 01       	movw	r30, r18
 3fe:	84 91       	lpm	r24, Z
 400:	47 fd       	sbrc	r20, 7
 402:	80 81       	ld	r24, Z
 404:	89 2b       	or	r24, r25
 406:	83 bf       	out	0x33, r24	; 51
 408:	53 b7       	in	r21, 0x33	; 51
 40a:	4e 2d       	mov	r20, r14
 40c:	96 01       	movw	r18, r12
 40e:	2c 5f       	subi	r18, 0xFC	; 252
 410:	3f 4f       	sbci	r19, 0xFF	; 255
 412:	4f 4f       	sbci	r20, 0xFF	; 255
 414:	f9 01       	movw	r30, r18
 416:	94 91       	lpm	r25, Z
 418:	47 fd       	sbrc	r20, 7
 41a:	90 81       	ld	r25, Z
 41c:	93 70       	andi	r25, 0x03	; 3
 41e:	20 e1       	ldi	r18, 0x10	; 16
 420:	92 9f       	mul	r25, r18
 422:	c0 01       	movw	r24, r0
 424:	11 24       	eor	r1, r1
 426:	85 2b       	or	r24, r21
 428:	83 bf       	out	0x33, r24	; 51
 42a:	ae 2d       	mov	r26, r14
 42c:	c6 01       	movw	r24, r12
 42e:	05 96       	adiw	r24, 0x05	; 5
 430:	a1 1d       	adc	r26, r1
 432:	fc 01       	movw	r30, r24
 434:	84 91       	lpm	r24, Z
 436:	a7 fd       	sbrc	r26, 7
 438:	80 81       	ld	r24, Z
 43a:	8c bf       	out	0x3c, r24	; 60
 43c:	78 94       	sei
 43e:	89 b7       	in	r24, 0x39	; 57
 440:	82 60       	ori	r24, 0x02	; 2
 442:	89 bf       	out	0x39, r24	; 57
 444:	f6 01       	movw	r30, r12
 446:	5e 2d       	mov	r21, r14
 448:	0e 94 2b 03 	call	0x656	; 0x656 <__xload_2>
 44c:	70 93 67 00 	sts	0x0067, r23	; 0x800067 <TMR0_CompareMatchInterruptHandler+0x1>
 450:	60 93 66 00 	sts	0x0066, r22	; 0x800066 <TMR0_CompareMatchInterruptHandler>
 454:	ef 90       	pop	r14
 456:	df 90       	pop	r13
 458:	cf 90       	pop	r12
 45a:	08 95       	ret

Disassembly of section .text.Timer0_Set_compare_value:

0000066a <Timer0_Set_compare_value>:
}

void Timer0_Set_compare_value(u8 _value){
	OCR0 = _value;
 66a:	8c bf       	out	0x3c, r24	; 60
 66c:	08 95       	ret

Disassembly of section .text.delay_ms:

00000612 <delay_ms>:
	 _timer->TMR0_CompareMatchInterruptHandler;
}
void Timer0_DeInit(const timer0_config_t *_timer){
	TMR0_STOP_TIMER();
	TIMER0_CompareMatchInterruptDisable();
	TIMER0_OverflowInterruptDisable();
 612:	29 b7       	in	r18, 0x39	; 57
 614:	22 60       	ori	r18, 0x02	; 2
 616:	29 bf       	out	0x39, r18	; 57
 618:	23 b7       	in	r18, 0x33	; 51
 61a:	23 60       	ori	r18, 0x03	; 3
 61c:	23 bf       	out	0x33, r18	; 51
 61e:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <sw_delay+0x1>
 622:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <sw_delay>
 626:	8d e7       	ldi	r24, 0x7D	; 125
 628:	0e 94 35 03 	call	0x66a	; 0x66a <Timer0_Set_compare_value>
 62c:	08 95       	ret

Disassembly of section .text.__vector_10:

000004b6 <__vector_10>:
 4b6:	1f 92       	push	r1
 4b8:	0f 92       	push	r0
 4ba:	0f b6       	in	r0, 0x3f	; 63
 4bc:	0f 92       	push	r0
 4be:	11 24       	eor	r1, r1
 4c0:	2f 93       	push	r18
 4c2:	3f 93       	push	r19
 4c4:	4f 93       	push	r20
 4c6:	5f 93       	push	r21
 4c8:	6f 93       	push	r22
 4ca:	7f 93       	push	r23
 4cc:	8f 93       	push	r24
 4ce:	9f 93       	push	r25
 4d0:	af 93       	push	r26
 4d2:	bf 93       	push	r27
 4d4:	ef 93       	push	r30
 4d6:	ff 93       	push	r31
 4d8:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <TMR0_CompareMatchInterruptHandler>
 4dc:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <TMR0_CompareMatchInterruptHandler+0x1>
 4e0:	09 95       	icall
 4e2:	ff 91       	pop	r31
 4e4:	ef 91       	pop	r30
 4e6:	bf 91       	pop	r27
 4e8:	af 91       	pop	r26
 4ea:	9f 91       	pop	r25
 4ec:	8f 91       	pop	r24
 4ee:	7f 91       	pop	r23
 4f0:	6f 91       	pop	r22
 4f2:	5f 91       	pop	r21
 4f4:	4f 91       	pop	r20
 4f6:	3f 91       	pop	r19
 4f8:	2f 91       	pop	r18
 4fa:	0f 90       	pop	r0
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	0f 90       	pop	r0
 500:	1f 90       	pop	r1
 502:	18 95       	reti

Disassembly of section .text.delay_Isr:

00000504 <delay_Isr>:
#include "Timer0.h"
extern  u16 sw_delay = 0 ;
extern u8 timer_flag = 0 ;
extern u16 sw_counter =0;
void delay_Isr(){
	sw_counter++;
 504:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <sw_counter>
 508:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <sw_counter+0x1>
 50c:	01 96       	adiw	r24, 0x01	; 1
 50e:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <sw_counter+0x1>
 512:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <sw_counter>
	if(sw_counter == sw_delay ){
 516:	20 91 6a 00 	lds	r18, 0x006A	; 0x80006a <sw_delay>
 51a:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <sw_delay+0x1>
 51e:	82 17       	cp	r24, r18
 520:	93 07       	cpc	r25, r19
 522:	61 f4       	brne	.+24     	; 0x53c <delay_Isr+0x38>
		sw_counter = 0;
 524:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <sw_counter+0x1>
 528:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <sw_counter>
		timer_flag++;
 52c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <timer_flag>
 530:	8f 5f       	subi	r24, 0xFF	; 255
 532:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <timer_flag>
		TIMER0_CompareMatchInterruptDisable();
 536:	89 b7       	in	r24, 0x39	; 57
 538:	8d 7f       	andi	r24, 0xFD	; 253
 53a:	89 bf       	out	0x39, r24	; 57
 53c:	08 95       	ret

Disassembly of section .text.libgcc:

00000656 <__xload_2>:
 656:	57 fd       	sbrc	r21, 7
 658:	03 c0       	rjmp	.+6      	; 0x660 <__xload_2+0xa>
 65a:	65 91       	lpm	r22, Z+
 65c:	75 91       	lpm	r23, Z+
 65e:	08 95       	ret
 660:	61 91       	ld	r22, Z+
 662:	71 91       	ld	r23, Z+
 664:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000672 <_fini>:
 672:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000674 <__funcs_on_exit>:
 674:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000676 <__simulator_exit>:
 676:	08 95       	ret

Disassembly of section .text.exit:

0000062e <exit>:
 62e:	ec 01       	movw	r28, r24
 630:	0e 94 3a 03 	call	0x674	; 0x674 <__funcs_on_exit>
 634:	0e 94 39 03 	call	0x672	; 0x672 <_fini>
 638:	ce 01       	movw	r24, r28
 63a:	0e 94 3b 03 	call	0x676	; 0x676 <__simulator_exit>
 63e:	ce 01       	movw	r24, r28
 640:	0e 94 37 03 	call	0x66e	; 0x66e <_Exit>

Disassembly of section .text._Exit:

0000066e <_Exit>:
 66e:	0e 94 5e 00 	call	0xbc	; 0xbc <_exit>
